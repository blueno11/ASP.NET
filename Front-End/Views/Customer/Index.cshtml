@model IEnumerable<Front_End.Models.KhachHang>

@{
    ViewData["Title"] = "Quản lý khách hàng";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="page-title">Quản lý khách hàng</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#customerModal">
            <i class="fas fa-plus"></i> Thêm khách hàng
        </button>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="customerTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên khách hàng</th>
                            <th>Số điện thoại</th>
                            <th>Email</th>
                            <th>Địa chỉ</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm/sửa khách hàng -->
<div class="modal fade" id="customerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Thêm khách hàng mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="customerForm">
                    <input type="hidden" id="customerId">
                    <div class="mb-3">
                        <label for="tenKhachHang" class="form-label">Tên khách hàng</label>
                        <input type="text" class="form-control" id="tenKhachHang" required>
                    </div>
                    <div class="mb-3">
                        <label for="soDienThoai" class="form-label">Số điện thoại</label>
                        <input type="tel" class="form-control" id="soDienThoai" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="diaChi" class="form-label">Địa chỉ</label>
                        <textarea class="form-control" id="diaChi" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveCustomer">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa khách hàng này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Xóa</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let customers = [];
        let customerToDelete = null;
        const customerModal = new bootstrap.Modal(document.getElementById('customerModal'));
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        const API_BASE_URL = 'https://localhost:7156'; // Thêm base URL của API

        // Load danh sách khách hàng
        async function loadCustomers() {
            try {
                const response = await fetch(`${API_BASE_URL}/api/customer/List`);
                if (!response.ok) throw new Error('Lỗi khi tải danh sách khách hàng');

                customers = await response.json();
                displayCustomers();
            } catch (error) {
                alert(error.message);
            }
        }

        // Hiển thị danh sách khách hàng
        function displayCustomers() {
            const tbody = document.querySelector('#customerTable tbody');
            tbody.innerHTML = '';

            customers.forEach(customer => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${customer.maKhachHang}</td>
                    <td>${customer.tenKhachHang}</td>
                    <td>${customer.soDienThoai || ''}</td>
                    <td>${customer.email || ''}</td>
                    <td>${customer.diaChi || ''}</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-2" onclick="editCustomer(${customer.maKhachHang})">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="showDeleteModal(${customer.maKhachHang})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }

        // Xử lý form submit
        document.getElementById('saveCustomer').addEventListener('click', async function() {
            const customerId = document.getElementById('customerId').value;
            const customer = {
                tenKhachHang: document.getElementById('tenKhachHang').value,
                soDienThoai: document.getElementById('soDienThoai').value,
                email: document.getElementById('email').value,
                diaChi: document.getElementById('diaChi').value
            };

            try {
                const url = customerId ? `${API_BASE_URL}/api/customer/Update/${customerId}` : `${API_BASE_URL}/api/customer/Insert`;
                const method = customerId ? 'PUT' : 'POST';

                if (customerId) {
                    customer.maKhachHang = parseInt(customerId);
                }

                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(customer)
                });

                if (!response.ok) {
                    const error = await response.text();
                    throw new Error(error);
                }

                customerModal.hide();
                resetForm();
                loadCustomers();
            } catch (error) {
                alert(error.message);
            }
        });

        // Sửa khách hàng
        function editCustomer(id) {
            const customer = customers.find(c => c.maKhachHang === id);
            if (!customer) return;

            document.getElementById('customerId').value = customer.maKhachHang;
            document.getElementById('tenKhachHang').value = customer.tenKhachHang;
            document.getElementById('soDienThoai').value = customer.soDienThoai || '';
            document.getElementById('email').value = customer.email || '';
            document.getElementById('diaChi').value = customer.diaChi || '';

            document.getElementById('modalTitle').textContent = 'Sửa thông tin khách hàng';
            customerModal.show();
        }

        // Hiển thị modal xóa
        function showDeleteModal(id) {
            customerToDelete = id;
            deleteModal.show();
        }

        // Xử lý xóa khách hàng
        document.getElementById('confirmDelete').addEventListener('click', async function() {
            if (!customerToDelete) return;

            try {
                const response = await fetch(`${API_BASE_URL}/api/customer/Delete/${customerToDelete}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Lỗi khi xóa khách hàng');

                deleteModal.hide();
                loadCustomers();
            } catch (error) {
                alert(error.message);
            } finally {
                customerToDelete = null;
            }
        });

        // Reset form
        function resetForm() {
            document.getElementById('customerForm').reset();
            document.getElementById('customerId').value = '';
            document.getElementById('modalTitle').textContent = 'Thêm khách hàng mới';
        }

        // Load danh sách khách hàng khi trang được tải
        document.addEventListener('DOMContentLoaded', loadCustomers);
    </script>
}