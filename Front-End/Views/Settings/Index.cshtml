@{
    ViewData["Title"] = "Quản lý tài khoản & phân quyền";
}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="page-title">Quản lý tài khoản & phân quyền</h2>
        <a class="btn btn-primary" href="/Settings/Create">
            <i class="fas fa-user-plus"></i> Tạo tài khoản
        </a>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="usersTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên đăng nhập</th>
                            <th>Vai trò</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Dữ liệu sẽ được render bằng JS -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- Modal xác nhận xóa -->
<div class="modal fade" id="deleteUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa tài khoản này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteUser">Xóa</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        const API_BASE_URL = 'https://localhost:7156';
        let users = [];
        let userToDelete = null;
        const deleteUserModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));

        // Load danh sách tài khoản
        async function loadUsers() {
            try {
                const response = await fetch(`${API_BASE_URL}/api/auth/list`);
                if (!response.ok) throw new Error('Lỗi khi tải danh sách tài khoản');
                users = await response.json();
                renderUsers();
            } catch (error) {
                alert(error.message);
            }
        }
        function renderUsers() {
            const tbody = document.querySelector('#usersTable tbody');
            tbody.innerHTML = '';
            users.forEach(user => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${user.id}</td>
                    <td>${user.username}</td>
                    <td>${user.role}</td>
                    <td>
                        <a class="btn btn-sm btn-primary me-2" href="/Settings/Edit/${user.id}">
                            <i class="fas fa-edit"></i>
                        </a>
                        <button class="btn btn-sm btn-danger" onclick="showDeleteUserModal(${user.id})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }
        // Xóa tài khoản
        window.showDeleteUserModal = function(id) {
            userToDelete = id;
            deleteUserModal.show();
        }
        document.getElementById('confirmDeleteUser').addEventListener('click', async function() {
            if (!userToDelete) return;
            try {
                const response = await fetch(`${API_BASE_URL}/api/user/delete/${userToDelete}`, {
                    method: 'DELETE'
                });
                if (!response.ok) throw new Error('Lỗi khi xóa tài khoản');
                deleteUserModal.hide();
                loadUsers();
            } catch (error) {
                alert(error.message);
            } finally {
                userToDelete = null;
            }
        });
        document.addEventListener('DOMContentLoaded', loadUsers);
    </script>
} 